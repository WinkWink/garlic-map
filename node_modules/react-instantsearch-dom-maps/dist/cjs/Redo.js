"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Redo = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty3 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactInstantsearchDom = require("react-instantsearch-dom");

var _Provider = require("./Provider");

var _withGoogleMaps = _interopRequireDefault(require("./withGoogleMaps"));

var cx = (0, _reactInstantsearchDom.createClassNames)('GeoSearch');

var Redo =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Redo, _Component);

  function Redo() {
    (0, _classCallCheck2.default)(this, Redo);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Redo).apply(this, arguments));
  }

  (0, _createClass2.default)(Redo, [{
    key: "getStateContext",
    value: function getStateContext() {
      return this.context[_Provider.STATE_CONTEXT];
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          googleMapsInstance = _this$props.googleMapsInstance,
          translate = _this$props.translate;

      var _this$getStateContext = this.getStateContext(),
          hasMapMoveSinceLastRefine = _this$getStateContext.hasMapMoveSinceLastRefine,
          refineWithInstance = _this$getStateContext.refineWithInstance;

      return _react.default.createElement("div", {
        className: cx('control')
      }, _react.default.createElement("button", {
        className: cx('redo', !hasMapMoveSinceLastRefine && 'redo--disabled'),
        disabled: !hasMapMoveSinceLastRefine,
        onClick: function onClick() {
          return refineWithInstance(googleMapsInstance);
        }
      }, translate('redo')));
    }
  }]);
  return Redo;
}(_react.Component);

exports.Redo = Redo;
(0, _defineProperty3.default)(Redo, "propTypes", {
  googleMapsInstance: _propTypes.default.object.isRequired,
  translate: _propTypes.default.func.isRequired
});
(0, _defineProperty3.default)(Redo, "contextTypes", (0, _defineProperty3.default)({}, _Provider.STATE_CONTEXT, _propTypes.default.shape({
  hasMapMoveSinceLastRefine: _propTypes.default.bool.isRequired,
  refineWithInstance: _propTypes.default.func.isRequired
}).isRequired));

var _default = (0, _reactInstantsearchDom.translatable)({
  redo: 'Redo search here'
})((0, _withGoogleMaps.default)(Redo));

exports.default = _default;