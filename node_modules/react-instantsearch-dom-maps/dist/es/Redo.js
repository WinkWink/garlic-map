import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { createClassNames, translatable } from 'react-instantsearch-dom';
import { STATE_CONTEXT } from './Provider';
import withGoogleMaps from './withGoogleMaps';
var cx = createClassNames('GeoSearch');
export var Redo =
/*#__PURE__*/
function (_Component) {
  _inherits(Redo, _Component);

  function Redo() {
    _classCallCheck(this, Redo);

    return _possibleConstructorReturn(this, _getPrototypeOf(Redo).apply(this, arguments));
  }

  _createClass(Redo, [{
    key: "getStateContext",
    value: function getStateContext() {
      return this.context[STATE_CONTEXT];
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          googleMapsInstance = _this$props.googleMapsInstance,
          translate = _this$props.translate;

      var _this$getStateContext = this.getStateContext(),
          hasMapMoveSinceLastRefine = _this$getStateContext.hasMapMoveSinceLastRefine,
          refineWithInstance = _this$getStateContext.refineWithInstance;

      return React.createElement("div", {
        className: cx('control')
      }, React.createElement("button", {
        className: cx('redo', !hasMapMoveSinceLastRefine && 'redo--disabled'),
        disabled: !hasMapMoveSinceLastRefine,
        onClick: function onClick() {
          return refineWithInstance(googleMapsInstance);
        }
      }, translate('redo')));
    }
  }]);

  return Redo;
}(Component);

_defineProperty(Redo, "propTypes", {
  googleMapsInstance: PropTypes.object.isRequired,
  translate: PropTypes.func.isRequired
});

_defineProperty(Redo, "contextTypes", _defineProperty({}, STATE_CONTEXT, PropTypes.shape({
  hasMapMoveSinceLastRefine: PropTypes.bool.isRequired,
  refineWithInstance: PropTypes.func.isRequired
}).isRequired));

export default translatable({
  redo: 'Redo search here'
})(withGoogleMaps(Redo));