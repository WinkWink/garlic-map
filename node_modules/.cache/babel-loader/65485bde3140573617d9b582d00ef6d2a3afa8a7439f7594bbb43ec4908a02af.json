{"ast":null,"code":"import PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\n// @ts-ignore\nimport { getResults } from \"../core/indexUtils.js\";\nvar MAX_WILDCARD_FACETS = 20;\nexport default createConnector({\n  displayName: 'AlgoliaDynamicWidgets',\n  $$type: 'ais.dynamicWidgets',\n  defaultProps: {\n    transformItems: function transformItems(items) {\n      return items;\n    },\n    maxValuesPerFacet: 20\n  },\n  propTypes: {\n    transformItems: PropTypes.func,\n    facets: PropTypes.arrayOf(PropTypes.string),\n    maxValuesPerFacet: PropTypes.number\n  },\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    if (props.facets && !(Array.isArray(props.facets) && props.facets.length <= 1 && (props.facets[0] === '*' || props.facets[0] === undefined))) {\n      throw new Error(\"The `facets` prop only accepts [] or [\\\"*\\\"], you passed \".concat(JSON.stringify(props.facets)));\n    }\n    if (!results) {\n      return {\n        attributesToRender: []\n      };\n    }\n    var facetOrder = results.renderingContent && results.renderingContent.facetOrdering && results.renderingContent.facetOrdering.facets && results.renderingContent.facetOrdering.facets.order || [];\n    var attributesToRender = props.transformItems(facetOrder, {\n      results: results\n    });\n    if (attributesToRender.length > MAX_WILDCARD_FACETS && !props.facets) {\n      // eslint-disable-next-line no-console\n      console.warn(\"More than \".concat(MAX_WILDCARD_FACETS, \" facets are requested to be displayed without explicitly setting which facets to retrieve. This could have a performance impact. Set \\\"facets\\\" to [] to do two smaller network requests, or explicitly to ['*'] to avoid this warning.\"));\n    }\n    if (props.maxValuesPerFacet < results._state.maxValuesPerFacet) {\n      // eslint-disable-next-line no-console\n      console.warn(\"The maxValuesPerFacet set by dynamic widgets (\".concat(props.maxValuesPerFacet, \") is smaller than one of the limits set by a widget (\").concat(results._state.maxValuesPerFacet, \"). This causes a mismatch in query parameters and thus an extra network request when that widget is mounted.\"));\n    }\n    return {\n      attributesToRender: attributesToRender\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props) {\n    return (props.facets || ['*']).reduce(function (acc, curr) {\n      return acc.addFacet(curr);\n    }, searchParameters.setQueryParameters({\n      maxValuesPerFacet: Math.max(props.maxValuesPerFacet || 0, searchParameters.maxValuesPerFacet || 0)\n    }));\n  }\n});","map":{"version":3,"names":["PropTypes","createConnector","getResults","MAX_WILDCARD_FACETS","displayName","$$type","defaultProps","transformItems","items","maxValuesPerFacet","propTypes","func","facets","arrayOf","string","number","getProvidedProps","props","_searchState","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","Array","isArray","length","undefined","Error","concat","JSON","stringify","attributesToRender","facetOrder","renderingContent","facetOrdering","order","console","warn","_state","getSearchParameters","searchParameters","reduce","acc","curr","addFacet","setQueryParameters","Math","max"],"sources":["/Users/amandawinkler/Desktop/algolia-instantsearch-react-geo/node_modules/react-instantsearch-core/dist/es/connectors/connectDynamicWidgets.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\n// @ts-ignore\nimport { getResults } from \"../core/indexUtils.js\";\nvar MAX_WILDCARD_FACETS = 20;\nexport default createConnector({\n  displayName: 'AlgoliaDynamicWidgets',\n  $$type: 'ais.dynamicWidgets',\n  defaultProps: {\n    transformItems: function transformItems(items) {\n      return items;\n    },\n    maxValuesPerFacet: 20\n  },\n  propTypes: {\n    transformItems: PropTypes.func,\n    facets: PropTypes.arrayOf(PropTypes.string),\n    maxValuesPerFacet: PropTypes.number\n  },\n  getProvidedProps: function getProvidedProps(props, _searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    if (props.facets && !(Array.isArray(props.facets) && props.facets.length <= 1 && (props.facets[0] === '*' || props.facets[0] === undefined))) {\n      throw new Error(\"The `facets` prop only accepts [] or [\\\"*\\\"], you passed \".concat(JSON.stringify(props.facets)));\n    }\n    if (!results) {\n      return {\n        attributesToRender: []\n      };\n    }\n    var facetOrder = results.renderingContent && results.renderingContent.facetOrdering && results.renderingContent.facetOrdering.facets && results.renderingContent.facetOrdering.facets.order || [];\n    var attributesToRender = props.transformItems(facetOrder, {\n      results: results\n    });\n    if (attributesToRender.length > MAX_WILDCARD_FACETS && !props.facets) {\n      // eslint-disable-next-line no-console\n      console.warn(\"More than \".concat(MAX_WILDCARD_FACETS, \" facets are requested to be displayed without explicitly setting which facets to retrieve. This could have a performance impact. Set \\\"facets\\\" to [] to do two smaller network requests, or explicitly to ['*'] to avoid this warning.\"));\n    }\n    if (props.maxValuesPerFacet < results._state.maxValuesPerFacet) {\n      // eslint-disable-next-line no-console\n      console.warn(\"The maxValuesPerFacet set by dynamic widgets (\".concat(props.maxValuesPerFacet, \") is smaller than one of the limits set by a widget (\").concat(results._state.maxValuesPerFacet, \"). This causes a mismatch in query parameters and thus an extra network request when that widget is mounted.\"));\n    }\n    return {\n      attributesToRender: attributesToRender\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props) {\n    return (props.facets || ['*']).reduce(function (acc, curr) {\n      return acc.addFacet(curr);\n    }, searchParameters.setQueryParameters({\n      maxValuesPerFacet: Math.max(props.maxValuesPerFacet || 0, searchParameters.maxValuesPerFacet || 0)\n    }));\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}