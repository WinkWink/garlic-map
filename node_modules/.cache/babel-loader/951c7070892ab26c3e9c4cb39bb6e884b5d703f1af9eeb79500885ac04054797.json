{"ast":null,"code":"import React from 'react';\nimport { connectCurrentRefinements } from 'react-instantsearch-core';\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\nimport CurrentRefinements from \"../components/CurrentRefinements.js\";\n\n/**\n * The CurrentRefinements widget displays the list of currently applied filters.\n *\n * It allows the user to selectively remove them.\n * @name CurrentRefinements\n * @kind widget\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @themeKey ais-CurrentRefinements - the root div of the widget\n * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement\n * @themeKey ais-CurrentRefinements-list - the list of all refined items\n * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement\n * @themeKey ais-CurrentRefinements-item - the refined list item\n * @themeKey ais-CurrentRefinements-button - the button of each refined list item\n * @themeKey ais-CurrentRefinements-label - the refined list label\n * @themeKey ais-CurrentRefinements-category - the category of each item\n * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory\n * @themeKey ais-CurrentRefinements-delete - the delete button of each label\n * @translationKey clearFilter - the remove filter button label\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CurrentRefinements />\n *     <RefinementList\n *       attribute=\"brand\"\n *       defaultRefinement={['Colors']}\n *     />\n *   </InstantSearch>\n * );\n */\n\nvar CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(CurrentRefinements, props));\n};\nexport default connectCurrentRefinements(CurrentRefinementsWidget, {\n  $$widgetType: 'ais.currentRefinements'\n});","map":{"version":3,"names":["React","connectCurrentRefinements","PanelCallbackHandler","CurrentRefinements","CurrentRefinementsWidget","props","createElement","$$widgetType"],"sources":["/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/node_modules/react-instantsearch-dom/dist/es/widgets/CurrentRefinements.js"],"sourcesContent":["import React from 'react';\nimport { connectCurrentRefinements } from 'react-instantsearch-core';\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\nimport CurrentRefinements from \"../components/CurrentRefinements.js\";\n\n/**\n * The CurrentRefinements widget displays the list of currently applied filters.\n *\n * It allows the user to selectively remove them.\n * @name CurrentRefinements\n * @kind widget\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @themeKey ais-CurrentRefinements - the root div of the widget\n * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement\n * @themeKey ais-CurrentRefinements-list - the list of all refined items\n * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement\n * @themeKey ais-CurrentRefinements-item - the refined list item\n * @themeKey ais-CurrentRefinements-button - the button of each refined list item\n * @themeKey ais-CurrentRefinements-label - the refined list label\n * @themeKey ais-CurrentRefinements-category - the category of each item\n * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory\n * @themeKey ais-CurrentRefinements-delete - the delete button of each label\n * @translationKey clearFilter - the remove filter button label\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CurrentRefinements />\n *     <RefinementList\n *       attribute=\"brand\"\n *       defaultRefinement={['Colors']}\n *     />\n *   </InstantSearch>\n * );\n */\n\nvar CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(CurrentRefinements, props));\n};\nexport default connectCurrentRefinements(CurrentRefinementsWidget, {\n  $$widgetType: 'ais.currentRefinements'\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,yBAAyB,QAAQ,0BAA0B;AACpE,OAAOC,oBAAoB,MAAM,uCAAuC;AACxE,OAAOC,kBAAkB,MAAM,qCAAqC;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,wBAAwB,GAAG,SAASA,wBAAwBA,CAACC,KAAK,EAAE;EACtE,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACJ,oBAAoB,EAAEG,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACH,kBAAkB,EAAEE,KAAK,CAAC,CAAC;AACnI,CAAC;AACD,eAAeJ,yBAAyB,CAACG,wBAAwB,EAAE;EACjEG,YAAY,EAAE;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}