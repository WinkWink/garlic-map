{"ast":null,"code":"'use strict';\n\n// This file hosts our error definitions\n// We use custom error \"types\" so that we can act on them when we need it\n// e.g.: if error instanceof errors.UnparsableJSON then..\nvar inherits = require('inherits');\nfunction AlgoliaSearchError(message, extraProperties) {\n  var forEach = require('foreach');\n  var error = this;\n\n  // try to get a stacktrace\n  if (typeof Error.captureStackTrace === 'function') {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    error.stack = new Error().stack || 'Cannot get a stacktrace, browser is too old';\n  }\n  this.name = 'AlgoliaSearchError';\n  this.message = message || 'Unknown error';\n  if (extraProperties) {\n    forEach(extraProperties, function addToErrorObject(value, key) {\n      error[key] = value;\n    });\n  }\n}\ninherits(AlgoliaSearchError, Error);\nfunction createCustomError(name, message) {\n  function AlgoliaSearchCustomError() {\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    // custom message not set, use default\n    if (typeof args[0] !== 'string') {\n      args.unshift(message);\n    }\n    AlgoliaSearchError.apply(this, args);\n    this.name = 'AlgoliaSearch' + name + 'Error';\n  }\n  inherits(AlgoliaSearchCustomError, AlgoliaSearchError);\n  return AlgoliaSearchCustomError;\n}\n\n// late exports to let various fn defs and inherits take place\nmodule.exports = {\n  AlgoliaSearchError: AlgoliaSearchError,\n  UnparsableJSON: createCustomError('UnparsableJSON', 'Could not parse the incoming response as JSON, see err.more for details'),\n  RequestTimeout: createCustomError('RequestTimeout', 'Request timed out before getting a response'),\n  Network: createCustomError('Network', 'Network issue, see err.more for details'),\n  JSONPScriptFail: createCustomError('JSONPScriptFail', '<script> was loaded but did not call our provided callback'),\n  ValidUntilNotFound: createCustomError('ValidUntilNotFound', 'The SecuredAPIKey does not have a validUntil parameter.'),\n  JSONPScriptError: createCustomError('JSONPScriptError', '<script> unable to load due to an `error` event on it'),\n  ObjectNotFound: createCustomError('ObjectNotFound', 'Object not found'),\n  Unknown: createCustomError('Unknown', 'Unknown error occured')\n};","map":{"version":3,"names":["inherits","require","AlgoliaSearchError","message","extraProperties","forEach","error","Error","captureStackTrace","constructor","stack","name","addToErrorObject","value","key","createCustomError","AlgoliaSearchCustomError","args","Array","prototype","slice","call","arguments","unshift","apply","module","exports","UnparsableJSON","RequestTimeout","Network","JSONPScriptFail","ValidUntilNotFound","JSONPScriptError","ObjectNotFound","Unknown"],"sources":["/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/node_modules/algoliasearch/src/errors.js"],"sourcesContent":["'use strict';\n\n// This file hosts our error definitions\n// We use custom error \"types\" so that we can act on them when we need it\n// e.g.: if error instanceof errors.UnparsableJSON then..\n\nvar inherits = require('inherits');\n\nfunction AlgoliaSearchError(message, extraProperties) {\n  var forEach = require('foreach');\n\n  var error = this;\n\n  // try to get a stacktrace\n  if (typeof Error.captureStackTrace === 'function') {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    error.stack = (new Error()).stack || 'Cannot get a stacktrace, browser is too old';\n  }\n\n  this.name = 'AlgoliaSearchError';\n  this.message = message || 'Unknown error';\n\n  if (extraProperties) {\n    forEach(extraProperties, function addToErrorObject(value, key) {\n      error[key] = value;\n    });\n  }\n}\n\ninherits(AlgoliaSearchError, Error);\n\nfunction createCustomError(name, message) {\n  function AlgoliaSearchCustomError() {\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    // custom message not set, use default\n    if (typeof args[0] !== 'string') {\n      args.unshift(message);\n    }\n\n    AlgoliaSearchError.apply(this, args);\n    this.name = 'AlgoliaSearch' + name + 'Error';\n  }\n\n  inherits(AlgoliaSearchCustomError, AlgoliaSearchError);\n\n  return AlgoliaSearchCustomError;\n}\n\n// late exports to let various fn defs and inherits take place\nmodule.exports = {\n  AlgoliaSearchError: AlgoliaSearchError,\n  UnparsableJSON: createCustomError(\n    'UnparsableJSON',\n    'Could not parse the incoming response as JSON, see err.more for details'\n  ),\n  RequestTimeout: createCustomError(\n    'RequestTimeout',\n    'Request timed out before getting a response'\n  ),\n  Network: createCustomError(\n    'Network',\n    'Network issue, see err.more for details'\n  ),\n  JSONPScriptFail: createCustomError(\n    'JSONPScriptFail',\n    '<script> was loaded but did not call our provided callback'\n  ),\n  ValidUntilNotFound: createCustomError(\n    'ValidUntilNotFound',\n    'The SecuredAPIKey does not have a validUntil parameter.'\n  ),\n  JSONPScriptError: createCustomError(\n    'JSONPScriptError',\n    '<script> unable to load due to an `error` event on it'\n  ),\n  ObjectNotFound: createCustomError(\n    'ObjectNotFound',\n    'Object not found'\n  ),\n  Unknown: createCustomError(\n    'Unknown',\n    'Unknown error occured'\n  )\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAElC,SAASC,kBAAkBA,CAACC,OAAO,EAAEC,eAAe,EAAE;EACpD,IAAIC,OAAO,GAAGJ,OAAO,CAAC,SAAS,CAAC;EAEhC,IAAIK,KAAK,GAAG,IAAI;;EAEhB;EACA,IAAI,OAAOC,KAAK,CAACC,iBAAiB,KAAK,UAAU,EAAE;IACjDD,KAAK,CAACC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACC,WAAW,CAAC;EACjD,CAAC,MAAM;IACLH,KAAK,CAACI,KAAK,GAAI,IAAIH,KAAK,EAAE,CAAEG,KAAK,IAAI,6CAA6C;EACpF;EAEA,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAChC,IAAI,CAACR,OAAO,GAAGA,OAAO,IAAI,eAAe;EAEzC,IAAIC,eAAe,EAAE;IACnBC,OAAO,CAACD,eAAe,EAAE,SAASQ,gBAAgBA,CAACC,KAAK,EAAEC,GAAG,EAAE;MAC7DR,KAAK,CAACQ,GAAG,CAAC,GAAGD,KAAK;IACpB,CAAC,CAAC;EACJ;AACF;AAEAb,QAAQ,CAACE,kBAAkB,EAAEK,KAAK,CAAC;AAEnC,SAASQ,iBAAiBA,CAACJ,IAAI,EAAER,OAAO,EAAE;EACxC,SAASa,wBAAwBA,CAAA,EAAG;IAClC,IAAIC,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;;IAEnD;IACA,IAAI,OAAOL,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC/BA,IAAI,CAACM,OAAO,CAACpB,OAAO,CAAC;IACvB;IAEAD,kBAAkB,CAACsB,KAAK,CAAC,IAAI,EAAEP,IAAI,CAAC;IACpC,IAAI,CAACN,IAAI,GAAG,eAAe,GAAGA,IAAI,GAAG,OAAO;EAC9C;EAEAX,QAAQ,CAACgB,wBAAwB,EAAEd,kBAAkB,CAAC;EAEtD,OAAOc,wBAAwB;AACjC;;AAEA;AACAS,MAAM,CAACC,OAAO,GAAG;EACfxB,kBAAkB,EAAEA,kBAAkB;EACtCyB,cAAc,EAAEZ,iBAAiB,CAC/B,gBAAgB,EAChB,yEAAyE,CAC1E;EACDa,cAAc,EAAEb,iBAAiB,CAC/B,gBAAgB,EAChB,6CAA6C,CAC9C;EACDc,OAAO,EAAEd,iBAAiB,CACxB,SAAS,EACT,yCAAyC,CAC1C;EACDe,eAAe,EAAEf,iBAAiB,CAChC,iBAAiB,EACjB,4DAA4D,CAC7D;EACDgB,kBAAkB,EAAEhB,iBAAiB,CACnC,oBAAoB,EACpB,yDAAyD,CAC1D;EACDiB,gBAAgB,EAAEjB,iBAAiB,CACjC,kBAAkB,EAClB,uDAAuD,CACxD;EACDkB,cAAc,EAAElB,iBAAiB,CAC/B,gBAAgB,EAChB,kBAAkB,CACnB;EACDmB,OAAO,EAAEnB,iBAAiB,CACxB,SAAS,EACT,uBAAuB;AAE3B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}