{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nimport createConnector from \"../core/createConnector.js\";\n// @ts-ignore\nimport { getResults, getIndexId, hasMultipleIndices } from \"../core/indexUtils.js\";\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName) {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\nfunction getWidgetRefinements(attribute, widgetKey, searchState) {\n  var widgetState = searchState[widgetKey];\n  switch (widgetKey) {\n    case 'range':\n      return Object.keys(widgetState[attribute]).map(function (rangeKey) {\n        return widgetState[attribute][rangeKey];\n      });\n    case 'refinementList':\n      return widgetState[attribute];\n    case 'hierarchicalMenu':\n      return [widgetState[attribute]];\n    case 'menu':\n      return [widgetState[attribute]];\n    case 'multiRange':\n      return widgetState[attribute].split(':');\n    case 'toggle':\n      return [widgetState[attribute]];\n    default:\n      return [];\n  }\n}\nfunction getRefinements(attribute) {\n  var searchState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var refinements = Object.keys(searchState).filter(function (widgetKey) {\n    return searchState[widgetKey] !== undefined && searchState[widgetKey][attribute] !== undefined;\n  }).map(function (widgetKey) {\n    return getWidgetRefinements(attribute, widgetKey, searchState);\n  }).reduce(function (acc, current) {\n    return acc.concat(current);\n  }, []); // flatten the refinements\n\n  return refinements;\n}\nfunction getRuleContextsFromTrackedFilters(_ref) {\n  var searchState = _ref.searchState,\n    trackedFilters = _ref.trackedFilters;\n  var ruleContexts = Object.keys(trackedFilters).reduce(function (facets, facetName) {\n    var facetRefinements = getRefinements(facetName, searchState);\n    var getTrackedFacetValues = trackedFilters[facetName];\n    var trackedFacetValues = getTrackedFacetValues(facetRefinements);\n    return [].concat(_toConsumableArray(facets), _toConsumableArray(facetRefinements.filter(function (facetRefinement) {\n      return trackedFacetValues.includes(facetRefinement);\n    }).map(function (facetValue) {\n      return escapeRuleContext(\"ais-\".concat(facetName, \"-\").concat(facetValue));\n    })));\n  }, []);\n  return ruleContexts;\n}\nvar defaultProps = {\n  transformItems: function transformItems(items) {\n    return items;\n  },\n  transformRuleContexts: function transformRuleContexts(ruleContexts) {\n    return ruleContexts;\n  },\n  trackedFilters: {}\n};\nexport default createConnector({\n  displayName: 'AlgoliaQueryRules',\n  $$type: 'ais.queryRules',\n  defaultProps: defaultProps,\n  getProvidedProps: function getProvidedProps(props, _1, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    if (results === null) {\n      return {\n        items: [],\n        canRefine: false\n      };\n    }\n    var _results$userData = results.userData,\n      userData = _results$userData === void 0 ? [] : _results$userData;\n    var transformItems = props.transformItems;\n    var transformedItems = transformItems(userData);\n    return {\n      items: transformedItems,\n      canRefine: transformedItems.length > 0\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    if (Object.keys(props.trackedFilters).length === 0) {\n      return searchParameters;\n    }\n    var indexSearchState = hasMultipleIndices({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) && searchState.indices ? searchState.indices[getIndexId({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    })] : searchState;\n    var newRuleContexts = getRuleContextsFromTrackedFilters({\n      searchState: indexSearchState,\n      trackedFilters: props.trackedFilters\n    });\n    var initialRuleContexts = searchParameters.ruleContexts || [];\n    var nextRuleContexts = [].concat(_toConsumableArray(initialRuleContexts), _toConsumableArray(newRuleContexts));\n    if (process.env.NODE_ENV === 'development') {\n      if (nextRuleContexts.length > 10) {\n        // eslint-disable-next-line no-console\n        console.warn(\"The maximum number of `ruleContexts` is 10. They have been sliced to that limit.\\nConsider using `transformRuleContexts` to minimize the number of rules sent to Algolia.\");\n      }\n    }\n    var ruleContexts = props.transformRuleContexts(nextRuleContexts).slice(0, 10);\n    return searchParameters.setQueryParameter('ruleContexts', ruleContexts);\n  }\n});","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","createConnector","getResults","getIndexId","hasMultipleIndices","escapeRuleContext","ruleName","replace","getWidgetRefinements","attribute","widgetKey","searchState","widgetState","keys","map","rangeKey","split","getRefinements","arguments","undefined","refinements","filter","reduce","acc","current","concat","getRuleContextsFromTrackedFilters","_ref","trackedFilters","ruleContexts","facets","facetName","facetRefinements","getTrackedFacetValues","trackedFacetValues","facetRefinement","includes","facetValue","defaultProps","transformItems","items","transformRuleContexts","displayName","$$type","getProvidedProps","props","_1","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","canRefine","_results$userData","userData","transformedItems","getSearchParameters","searchParameters","indexSearchState","indices","newRuleContexts","initialRuleContexts","nextRuleContexts","process","env","NODE_ENV","console","warn","setQueryParameter"],"sources":["/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/node_modules/react-instantsearch-core/dist/es/connectors/connectQueryRules.js"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport createConnector from \"../core/createConnector.js\";\n// @ts-ignore\nimport { getResults, getIndexId, hasMultipleIndices } from \"../core/indexUtils.js\";\n// A context rule must consist only of alphanumeric characters, hyphens, and underscores.\n// See https://www.algolia.com/doc/guides/managing-results/refine-results/merchandising-and-promoting/in-depth/implementing-query-rules/#context\nfunction escapeRuleContext(ruleName) {\n  return ruleName.replace(/[^a-z0-9-_]+/gi, '_');\n}\nfunction getWidgetRefinements(attribute, widgetKey, searchState) {\n  var widgetState = searchState[widgetKey];\n  switch (widgetKey) {\n    case 'range':\n      return Object.keys(widgetState[attribute]).map(function (rangeKey) {\n        return widgetState[attribute][rangeKey];\n      });\n    case 'refinementList':\n      return widgetState[attribute];\n    case 'hierarchicalMenu':\n      return [widgetState[attribute]];\n    case 'menu':\n      return [widgetState[attribute]];\n    case 'multiRange':\n      return widgetState[attribute].split(':');\n    case 'toggle':\n      return [widgetState[attribute]];\n    default:\n      return [];\n  }\n}\nfunction getRefinements(attribute) {\n  var searchState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var refinements = Object.keys(searchState).filter(function (widgetKey) {\n    return searchState[widgetKey] !== undefined && searchState[widgetKey][attribute] !== undefined;\n  }).map(function (widgetKey) {\n    return getWidgetRefinements(attribute, widgetKey, searchState);\n  }).reduce(function (acc, current) {\n    return acc.concat(current);\n  }, []); // flatten the refinements\n\n  return refinements;\n}\nfunction getRuleContextsFromTrackedFilters(_ref) {\n  var searchState = _ref.searchState,\n    trackedFilters = _ref.trackedFilters;\n  var ruleContexts = Object.keys(trackedFilters).reduce(function (facets, facetName) {\n    var facetRefinements = getRefinements(facetName, searchState);\n    var getTrackedFacetValues = trackedFilters[facetName];\n    var trackedFacetValues = getTrackedFacetValues(facetRefinements);\n    return [].concat(_toConsumableArray(facets), _toConsumableArray(facetRefinements.filter(function (facetRefinement) {\n      return trackedFacetValues.includes(facetRefinement);\n    }).map(function (facetValue) {\n      return escapeRuleContext(\"ais-\".concat(facetName, \"-\").concat(facetValue));\n    })));\n  }, []);\n  return ruleContexts;\n}\nvar defaultProps = {\n  transformItems: function transformItems(items) {\n    return items;\n  },\n  transformRuleContexts: function transformRuleContexts(ruleContexts) {\n    return ruleContexts;\n  },\n  trackedFilters: {}\n};\nexport default createConnector({\n  displayName: 'AlgoliaQueryRules',\n  $$type: 'ais.queryRules',\n  defaultProps: defaultProps,\n  getProvidedProps: function getProvidedProps(props, _1, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    if (results === null) {\n      return {\n        items: [],\n        canRefine: false\n      };\n    }\n    var _results$userData = results.userData,\n      userData = _results$userData === void 0 ? [] : _results$userData;\n    var transformItems = props.transformItems;\n    var transformedItems = transformItems(userData);\n    return {\n      items: transformedItems,\n      canRefine: transformedItems.length > 0\n    };\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    if (Object.keys(props.trackedFilters).length === 0) {\n      return searchParameters;\n    }\n    var indexSearchState = hasMultipleIndices({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) && searchState.indices ? searchState.indices[getIndexId({\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    })] : searchState;\n    var newRuleContexts = getRuleContextsFromTrackedFilters({\n      searchState: indexSearchState,\n      trackedFilters: props.trackedFilters\n    });\n    var initialRuleContexts = searchParameters.ruleContexts || [];\n    var nextRuleContexts = [].concat(_toConsumableArray(initialRuleContexts), _toConsumableArray(newRuleContexts));\n    if (process.env.NODE_ENV === 'development') {\n      if (nextRuleContexts.length > 10) {\n        // eslint-disable-next-line no-console\n        console.warn(\"The maximum number of `ruleContexts` is 10. They have been sliced to that limit.\\nConsider using `transformRuleContexts` to minimize the number of rules sent to Algolia.\");\n      }\n    }\n    var ruleContexts = props.transformRuleContexts(nextRuleContexts).slice(0, 10);\n    return searchParameters.setQueryParameter('ruleContexts', ruleContexts);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}