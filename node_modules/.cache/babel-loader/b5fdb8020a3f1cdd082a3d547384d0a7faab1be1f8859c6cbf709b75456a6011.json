{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, getIndexId, refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\n\n/**\n * connectRange connector provides the logic to create connected\n * components that will give the ability for a user to refine results using\n * a numeric range.\n * @name connectRange\n * @kind connector\n * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n * The values inside the attribute must be JavaScript numbers (not strings).\n * @propType {string} attribute - Name of the attribute for faceting\n * @propType {{min?: number, max?: number}} [defaultRefinement] - Default searchState of the widget containing the start and the end of the range.\n * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.\n * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.\n * @propType {number} [precision=0] - Number of digits after decimal point to use.\n * @providedPropType {function} refine - a function to select a range.\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the refinement currently applied\n * @providedPropType {number} min - the minimum value available.\n * @providedPropType {number} max - the maximum value available.\n * @providedPropType {number} precision - Number of digits after decimal point to use.\n */\n\nfunction getId(props) {\n  return props.attribute;\n}\nvar namespace = 'range';\nfunction getCurrentRange(boundaries, stats, precision) {\n  var pow = Math.pow(10, precision);\n  var min;\n  if (typeof boundaries.min === 'number' && isFinite(boundaries.min)) {\n    min = boundaries.min;\n  } else if (typeof stats.min === 'number' && isFinite(stats.min)) {\n    min = stats.min;\n  } else {\n    min = undefined;\n  }\n  var max;\n  if (typeof boundaries.max === 'number' && isFinite(boundaries.max)) {\n    max = boundaries.max;\n  } else if (typeof stats.max === 'number' && isFinite(stats.max)) {\n    max = stats.max;\n  } else {\n    max = undefined;\n  }\n  return {\n    min: min !== undefined ? Math.floor(min * pow) / pow : min,\n    max: max !== undefined ? Math.ceil(max * pow) / pow : max\n  };\n}\nfunction getCurrentRefinement(props, searchState, currentRange, context) {\n  var _getCurrentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), {}),\n    min = _getCurrentRefinement.min,\n    max = _getCurrentRefinement.max;\n  var isFloatPrecision = Boolean(props.precision);\n  var nextMin = min;\n  if (typeof nextMin === 'string') {\n    nextMin = isFloatPrecision ? parseFloat(nextMin) : parseInt(nextMin, 10);\n  }\n  var nextMax = max;\n  if (typeof nextMax === 'string') {\n    nextMax = isFloatPrecision ? parseFloat(nextMax) : parseInt(nextMax, 10);\n  }\n  var refinement = {\n    min: nextMin,\n    max: nextMax\n  };\n  var hasMinBound = props.min !== undefined;\n  var hasMaxBound = props.max !== undefined;\n  var hasMinRefinment = refinement.min !== undefined;\n  var hasMaxRefinment = refinement.max !== undefined;\n  if (hasMinBound && hasMinRefinment && refinement.min < currentRange.min) {\n    throw Error(\"You can't provide min value lower than range.\");\n  }\n  if (hasMaxBound && hasMaxRefinment && refinement.max > currentRange.max) {\n    throw Error(\"You can't provide max value greater than range.\");\n  }\n  if (hasMinBound && !hasMinRefinment) {\n    refinement.min = currentRange.min;\n  }\n  if (hasMaxBound && !hasMaxRefinment) {\n    refinement.max = currentRange.max;\n  }\n  return refinement;\n}\nfunction getCurrentRefinementWithRange(refinement, range) {\n  return {\n    min: refinement.min !== undefined ? refinement.min : range.min,\n    max: refinement.max !== undefined ? refinement.max : range.max\n  };\n}\nfunction nextValueForRefinement(hasBound, isReset, range, value) {\n  var next;\n  if (!hasBound && range === value) {\n    next = undefined;\n  } else if (hasBound && isReset) {\n    next = range;\n  } else {\n    next = value;\n  }\n  return next;\n}\nfunction _refine(props, searchState, nextRefinement, currentRange, context) {\n  var nextMin = nextRefinement.min,\n    nextMax = nextRefinement.max;\n  var currentMinRange = currentRange.min,\n    currentMaxRange = currentRange.max;\n  var isMinReset = nextMin === undefined || nextMin === '';\n  var isMaxReset = nextMax === undefined || nextMax === '';\n  var nextMinAsNumber = !isMinReset ? parseFloat(nextMin) : undefined;\n  var nextMaxAsNumber = !isMaxReset ? parseFloat(nextMax) : undefined;\n  var isNextMinValid = isMinReset || isFinite(nextMinAsNumber);\n  var isNextMaxValid = isMaxReset || isFinite(nextMaxAsNumber);\n  if (!isNextMinValid || !isNextMaxValid) {\n    throw Error(\"You can't provide non finite values to the range connector.\");\n  }\n  if (nextMinAsNumber < currentMinRange) {\n    throw Error(\"You can't provide min value lower than range.\");\n  }\n  if (nextMaxAsNumber > currentMaxRange) {\n    throw Error(\"You can't provide max value greater than range.\");\n  }\n  var id = getId(props);\n  var resetPage = true;\n  var nextValue = _defineProperty({}, id, {\n    min: nextValueForRefinement(props.min !== undefined, isMinReset, currentMinRange, nextMinAsNumber),\n    max: nextValueForRefinement(props.max !== undefined, isMaxReset, currentMaxRange, nextMaxAsNumber)\n  });\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\nexport default createConnector({\n  displayName: 'AlgoliaRange',\n  $$type: 'ais.range',\n  propTypes: {\n    id: PropTypes.string,\n    attribute: PropTypes.string.isRequired,\n    defaultRefinement: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number\n    }),\n    min: PropTypes.number,\n    max: PropTypes.number,\n    precision: PropTypes.number,\n    header: PropTypes.node,\n    footer: PropTypes.node\n  },\n  defaultProps: {\n    precision: 0\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var attribute = props.attribute,\n      precision = props.precision,\n      minBound = props.min,\n      maxBound = props.max;\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var hasFacet = results && results.getFacetByName(attribute);\n    var stats = hasFacet ? results.getFacetStats(attribute) || {} : {};\n    var facetValues = hasFacet ? results.getFacetValues(attribute) : [];\n    var count = facetValues.map(function (v) {\n      return {\n        value: v.name,\n        count: v.count\n      };\n    });\n    var _getCurrentRange = getCurrentRange({\n        min: minBound,\n        max: maxBound\n      }, stats, precision),\n      rangeMin = _getCurrentRange.min,\n      rangeMax = _getCurrentRange.max;\n\n    // The searchState is not always in sync with the helper state. For example\n    // when we set boundaries on the first render the searchState don't have\n    // the correct refinement. If this behavior change in the upcoming version\n    // we could store the range inside the searchState instead of rely on `this`.\n    this._currentRange = {\n      min: rangeMin,\n      max: rangeMax\n    };\n    var currentRefinement = getCurrentRefinement(props, searchState, this._currentRange, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      min: rangeMin,\n      max: rangeMax,\n      canRefine: count.length > 0,\n      currentRefinement: getCurrentRefinementWithRange(currentRefinement, this._currentRange),\n      count: count,\n      precision: precision\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this._currentRange, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(params, props, searchState) {\n    var attribute = props.attribute;\n    var _getCurrentRefinement2 = getCurrentRefinement(props, searchState, this._currentRange, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      min = _getCurrentRefinement2.min,\n      max = _getCurrentRefinement2.max;\n    params = params.addDisjunctiveFacet(attribute);\n    if (min !== undefined) {\n      params = params.addNumericRefinement(attribute, '>=', min);\n    }\n    if (max !== undefined) {\n      params = params.addNumericRefinement(attribute, '<=', max);\n    }\n    return params;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var _this = this;\n    var _this$_currentRange = this._currentRange,\n      minRange = _this$_currentRange.min,\n      maxRange = _this$_currentRange.max;\n    var _getCurrentRefinement3 = getCurrentRefinement(props, searchState, this._currentRange, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      minValue = _getCurrentRefinement3.min,\n      maxValue = _getCurrentRefinement3.max;\n    var items = [];\n    var hasMin = minValue !== undefined;\n    var hasMax = maxValue !== undefined;\n    var shouldDisplayMinLabel = hasMin && minValue !== minRange;\n    var shouldDisplayMaxLabel = hasMax && maxValue !== maxRange;\n    if (shouldDisplayMinLabel || shouldDisplayMaxLabel) {\n      var fragments = [hasMin ? \"\".concat(minValue, \" <= \") : '', props.attribute, hasMax ? \" <= \".concat(maxValue) : ''];\n      items.push({\n        label: fragments.join(''),\n        attribute: props.attribute,\n        value: function value(nextState) {\n          return _refine(props, nextState, {}, _this._currentRange, {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: getCurrentRefinementWithRange({\n          min: minValue,\n          max: maxValue\n        }, {\n          min: minRange,\n          max: maxRange\n        })\n      });\n    }\n    return {\n      id: getId(props),\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: items\n    };\n  }\n});","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","PropTypes","createConnector","cleanUpValue","getIndexId","refineValue","getCurrentRefinementValue","getResults","getId","props","attribute","namespace","getCurrentRange","boundaries","stats","precision","pow","Math","min","isFinite","max","floor","ceil","getCurrentRefinement","searchState","currentRange","context","_getCurrentRefinement","concat","isFloatPrecision","Boolean","nextMin","parseFloat","parseInt","nextMax","refinement","hasMinBound","hasMaxBound","hasMinRefinment","hasMaxRefinment","Error","getCurrentRefinementWithRange","range","nextValueForRefinement","hasBound","isReset","next","_refine","nextRefinement","currentMinRange","currentMaxRange","isMinReset","isMaxReset","nextMinAsNumber","nextMaxAsNumber","isNextMinValid","isNextMaxValid","id","resetPage","nextValue","_cleanUp","displayName","$$type","propTypes","string","isRequired","defaultRefinement","shape","number","header","node","footer","defaultProps","getProvidedProps","searchResults","minBound","maxBound","results","ais","contextValue","multiIndexContext","indexContextValue","hasFacet","getFacetByName","getFacetStats","facetValues","getFacetValues","count","map","v","name","_getCurrentRange","rangeMin","rangeMax","_currentRange","currentRefinement","canRefine","length","refine","cleanUp","getSearchParameters","params","_getCurrentRefinement2","addDisjunctiveFacet","addNumericRefinement","getMetadata","_this","_this$_currentRange","minRange","maxRange","_getCurrentRefinement3","minValue","maxValue","items","hasMin","hasMax","shouldDisplayMinLabel","shouldDisplayMaxLabel","fragments","push","label","join","nextState","index"],"sources":["/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/node_modules/react-instantsearch-core/dist/es/connectors/connectRange.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, getIndexId, refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\n\n/**\n * connectRange connector provides the logic to create connected\n * components that will give the ability for a user to refine results using\n * a numeric range.\n * @name connectRange\n * @kind connector\n * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n * The values inside the attribute must be JavaScript numbers (not strings).\n * @propType {string} attribute - Name of the attribute for faceting\n * @propType {{min?: number, max?: number}} [defaultRefinement] - Default searchState of the widget containing the start and the end of the range.\n * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.\n * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.\n * @propType {number} [precision=0] - Number of digits after decimal point to use.\n * @providedPropType {function} refine - a function to select a range.\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the refinement currently applied\n * @providedPropType {number} min - the minimum value available.\n * @providedPropType {number} max - the maximum value available.\n * @providedPropType {number} precision - Number of digits after decimal point to use.\n */\n\nfunction getId(props) {\n  return props.attribute;\n}\nvar namespace = 'range';\nfunction getCurrentRange(boundaries, stats, precision) {\n  var pow = Math.pow(10, precision);\n  var min;\n  if (typeof boundaries.min === 'number' && isFinite(boundaries.min)) {\n    min = boundaries.min;\n  } else if (typeof stats.min === 'number' && isFinite(stats.min)) {\n    min = stats.min;\n  } else {\n    min = undefined;\n  }\n  var max;\n  if (typeof boundaries.max === 'number' && isFinite(boundaries.max)) {\n    max = boundaries.max;\n  } else if (typeof stats.max === 'number' && isFinite(stats.max)) {\n    max = stats.max;\n  } else {\n    max = undefined;\n  }\n  return {\n    min: min !== undefined ? Math.floor(min * pow) / pow : min,\n    max: max !== undefined ? Math.ceil(max * pow) / pow : max\n  };\n}\nfunction getCurrentRefinement(props, searchState, currentRange, context) {\n  var _getCurrentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), {}),\n    min = _getCurrentRefinement.min,\n    max = _getCurrentRefinement.max;\n  var isFloatPrecision = Boolean(props.precision);\n  var nextMin = min;\n  if (typeof nextMin === 'string') {\n    nextMin = isFloatPrecision ? parseFloat(nextMin) : parseInt(nextMin, 10);\n  }\n  var nextMax = max;\n  if (typeof nextMax === 'string') {\n    nextMax = isFloatPrecision ? parseFloat(nextMax) : parseInt(nextMax, 10);\n  }\n  var refinement = {\n    min: nextMin,\n    max: nextMax\n  };\n  var hasMinBound = props.min !== undefined;\n  var hasMaxBound = props.max !== undefined;\n  var hasMinRefinment = refinement.min !== undefined;\n  var hasMaxRefinment = refinement.max !== undefined;\n  if (hasMinBound && hasMinRefinment && refinement.min < currentRange.min) {\n    throw Error(\"You can't provide min value lower than range.\");\n  }\n  if (hasMaxBound && hasMaxRefinment && refinement.max > currentRange.max) {\n    throw Error(\"You can't provide max value greater than range.\");\n  }\n  if (hasMinBound && !hasMinRefinment) {\n    refinement.min = currentRange.min;\n  }\n  if (hasMaxBound && !hasMaxRefinment) {\n    refinement.max = currentRange.max;\n  }\n  return refinement;\n}\nfunction getCurrentRefinementWithRange(refinement, range) {\n  return {\n    min: refinement.min !== undefined ? refinement.min : range.min,\n    max: refinement.max !== undefined ? refinement.max : range.max\n  };\n}\nfunction nextValueForRefinement(hasBound, isReset, range, value) {\n  var next;\n  if (!hasBound && range === value) {\n    next = undefined;\n  } else if (hasBound && isReset) {\n    next = range;\n  } else {\n    next = value;\n  }\n  return next;\n}\nfunction _refine(props, searchState, nextRefinement, currentRange, context) {\n  var nextMin = nextRefinement.min,\n    nextMax = nextRefinement.max;\n  var currentMinRange = currentRange.min,\n    currentMaxRange = currentRange.max;\n  var isMinReset = nextMin === undefined || nextMin === '';\n  var isMaxReset = nextMax === undefined || nextMax === '';\n  var nextMinAsNumber = !isMinReset ? parseFloat(nextMin) : undefined;\n  var nextMaxAsNumber = !isMaxReset ? parseFloat(nextMax) : undefined;\n  var isNextMinValid = isMinReset || isFinite(nextMinAsNumber);\n  var isNextMaxValid = isMaxReset || isFinite(nextMaxAsNumber);\n  if (!isNextMinValid || !isNextMaxValid) {\n    throw Error(\"You can't provide non finite values to the range connector.\");\n  }\n  if (nextMinAsNumber < currentMinRange) {\n    throw Error(\"You can't provide min value lower than range.\");\n  }\n  if (nextMaxAsNumber > currentMaxRange) {\n    throw Error(\"You can't provide max value greater than range.\");\n  }\n  var id = getId(props);\n  var resetPage = true;\n  var nextValue = _defineProperty({}, id, {\n    min: nextValueForRefinement(props.min !== undefined, isMinReset, currentMinRange, nextMinAsNumber),\n    max: nextValueForRefinement(props.max !== undefined, isMaxReset, currentMaxRange, nextMaxAsNumber)\n  });\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\nexport default createConnector({\n  displayName: 'AlgoliaRange',\n  $$type: 'ais.range',\n  propTypes: {\n    id: PropTypes.string,\n    attribute: PropTypes.string.isRequired,\n    defaultRefinement: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number\n    }),\n    min: PropTypes.number,\n    max: PropTypes.number,\n    precision: PropTypes.number,\n    header: PropTypes.node,\n    footer: PropTypes.node\n  },\n  defaultProps: {\n    precision: 0\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var attribute = props.attribute,\n      precision = props.precision,\n      minBound = props.min,\n      maxBound = props.max;\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var hasFacet = results && results.getFacetByName(attribute);\n    var stats = hasFacet ? results.getFacetStats(attribute) || {} : {};\n    var facetValues = hasFacet ? results.getFacetValues(attribute) : [];\n    var count = facetValues.map(function (v) {\n      return {\n        value: v.name,\n        count: v.count\n      };\n    });\n    var _getCurrentRange = getCurrentRange({\n        min: minBound,\n        max: maxBound\n      }, stats, precision),\n      rangeMin = _getCurrentRange.min,\n      rangeMax = _getCurrentRange.max;\n\n    // The searchState is not always in sync with the helper state. For example\n    // when we set boundaries on the first render the searchState don't have\n    // the correct refinement. If this behavior change in the upcoming version\n    // we could store the range inside the searchState instead of rely on `this`.\n    this._currentRange = {\n      min: rangeMin,\n      max: rangeMax\n    };\n    var currentRefinement = getCurrentRefinement(props, searchState, this._currentRange, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      min: rangeMin,\n      max: rangeMax,\n      canRefine: count.length > 0,\n      currentRefinement: getCurrentRefinementWithRange(currentRefinement, this._currentRange),\n      count: count,\n      precision: precision\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, this._currentRange, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(params, props, searchState) {\n    var attribute = props.attribute;\n    var _getCurrentRefinement2 = getCurrentRefinement(props, searchState, this._currentRange, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      min = _getCurrentRefinement2.min,\n      max = _getCurrentRefinement2.max;\n    params = params.addDisjunctiveFacet(attribute);\n    if (min !== undefined) {\n      params = params.addNumericRefinement(attribute, '>=', min);\n    }\n    if (max !== undefined) {\n      params = params.addNumericRefinement(attribute, '<=', max);\n    }\n    return params;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var _this = this;\n    var _this$_currentRange = this._currentRange,\n      minRange = _this$_currentRange.min,\n      maxRange = _this$_currentRange.max;\n    var _getCurrentRefinement3 = getCurrentRefinement(props, searchState, this._currentRange, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      minValue = _getCurrentRefinement3.min,\n      maxValue = _getCurrentRefinement3.max;\n    var items = [];\n    var hasMin = minValue !== undefined;\n    var hasMax = maxValue !== undefined;\n    var shouldDisplayMinLabel = hasMin && minValue !== minRange;\n    var shouldDisplayMaxLabel = hasMax && maxValue !== maxRange;\n    if (shouldDisplayMinLabel || shouldDisplayMaxLabel) {\n      var fragments = [hasMin ? \"\".concat(minValue, \" <= \") : '', props.attribute, hasMax ? \" <= \".concat(maxValue) : ''];\n      items.push({\n        label: fragments.join(''),\n        attribute: props.attribute,\n        value: function value(nextState) {\n          return _refine(props, nextState, {}, _this._currentRange, {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: getCurrentRefinementWithRange({\n          min: minValue,\n          max: maxValue\n        }, {\n          min: minRange,\n          max: maxRange\n        })\n      });\n    }\n    return {\n      id: getId(props),\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: items\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}