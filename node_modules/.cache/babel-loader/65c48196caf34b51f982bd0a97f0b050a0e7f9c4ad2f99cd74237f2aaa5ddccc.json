{"ast":null,"code":"// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n// eslint-disable-next-line valid-jsdoc\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  var basePromiseId = -1;\n  var latestResolvedId = -1;\n  var latestResolvedValue = undefined;\n  return function runConcurrentSafePromise(promise) {\n    basePromiseId++;\n    var currentPromiseId = basePromiseId;\n    return Promise.resolve(promise).then(function (x) {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n      return x;\n    });\n  };\n}","map":{"version":3,"names":["createConcurrentSafePromise","basePromiseId","latestResolvedId","latestResolvedValue","undefined","runConcurrentSafePromise","promise","currentPromiseId","Promise","resolve","then","x"],"sources":["/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/node_modules/react-instantsearch-dom/dist/es/lib/createConcurrentSafePromise.js"],"sourcesContent":["// copied from\n// https://github.com/algolia/autocomplete.js/blob/307a7acc4283e10a19cb7d067f04f1bea79dc56f/packages/autocomplete-core/src/utils/createConcurrentSafePromise.ts#L1:L1\n// eslint-disable-next-line valid-jsdoc\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  var basePromiseId = -1;\n  var latestResolvedId = -1;\n  var latestResolvedValue = undefined;\n  return function runConcurrentSafePromise(promise) {\n    basePromiseId++;\n    var currentPromiseId = basePromiseId;\n    return Promise.resolve(promise).then(function (x) {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue;\n      }\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n      return x;\n    });\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,2BAA2BA,CAAA,EAAG;EAC5C,IAAIC,aAAa,GAAG,CAAC,CAAC;EACtB,IAAIC,gBAAgB,GAAG,CAAC,CAAC;EACzB,IAAIC,mBAAmB,GAAGC,SAAS;EACnC,OAAO,SAASC,wBAAwBA,CAACC,OAAO,EAAE;IAChDL,aAAa,EAAE;IACf,IAAIM,gBAAgB,GAAGN,aAAa;IACpC,OAAOO,OAAO,CAACC,OAAO,CAACH,OAAO,CAAC,CAACI,IAAI,CAAC,UAAUC,CAAC,EAAE;MAChD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIR,mBAAmB,IAAII,gBAAgB,GAAGL,gBAAgB,EAAE;QAC9D,OAAOC,mBAAmB;MAC5B;MACAD,gBAAgB,GAAGK,gBAAgB;MACnCJ,mBAAmB,GAAGQ,CAAC;MACvB,OAAOA,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}