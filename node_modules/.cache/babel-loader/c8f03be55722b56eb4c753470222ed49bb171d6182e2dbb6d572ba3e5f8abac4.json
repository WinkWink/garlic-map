{"ast":null,"code":"var debug = require('debug')('algoliasearch:src/hostIndexState.js');\nvar localStorageNamespace = 'algoliasearch-client-js';\nvar store;\nvar moduleStore = {\n  state: {},\n  set: function (key, data) {\n    this.state[key] = data;\n    return this.state[key];\n  },\n  get: function (key) {\n    return this.state[key] || null;\n  }\n};\nvar localStorageStore = {\n  set: function (key, data) {\n    moduleStore.set(key, data); // always replicate localStorageStore to moduleStore in case of failure\n\n    try {\n      var namespace = JSON.parse(global.localStorage[localStorageNamespace]);\n      namespace[key] = data;\n      global.localStorage[localStorageNamespace] = JSON.stringify(namespace);\n      return namespace[key];\n    } catch (e) {\n      return localStorageFailure(key, e);\n    }\n  },\n  get: function (key) {\n    try {\n      return JSON.parse(global.localStorage[localStorageNamespace])[key] || null;\n    } catch (e) {\n      return localStorageFailure(key, e);\n    }\n  }\n};\nfunction localStorageFailure(key, e) {\n  debug('localStorage failed with', e);\n  cleanup();\n  store = moduleStore;\n  return store.get(key);\n}\nstore = supportsLocalStorage() ? localStorageStore : moduleStore;\nmodule.exports = {\n  get: getOrSet,\n  set: getOrSet,\n  supportsLocalStorage: supportsLocalStorage\n};\nfunction getOrSet(key, data) {\n  if (arguments.length === 1) {\n    return store.get(key);\n  }\n  return store.set(key, data);\n}\nfunction supportsLocalStorage() {\n  try {\n    if ('localStorage' in global && global.localStorage !== null) {\n      if (!global.localStorage[localStorageNamespace]) {\n        // actual creation of the namespace\n        global.localStorage.setItem(localStorageNamespace, JSON.stringify({}));\n      }\n      return true;\n    }\n    return false;\n  } catch (_) {\n    return false;\n  }\n}\n\n// In case of any error on localStorage, we clean our own namespace, this should handle\n// quota errors when a lot of keys + data are used\nfunction cleanup() {\n  try {\n    global.localStorage.removeItem(localStorageNamespace);\n  } catch (_) {\n    // nothing to do\n  }\n}","map":{"version":3,"names":["debug","require","localStorageNamespace","store","moduleStore","state","set","key","data","get","localStorageStore","namespace","JSON","parse","global","localStorage","stringify","e","localStorageFailure","cleanup","supportsLocalStorage","module","exports","getOrSet","arguments","length","setItem","_","removeItem"],"sources":["/Users/amandawinkler/Desktop/algolia-instantsearch-react-geo/node_modules/algoliasearch/src/store.js"],"sourcesContent":["var debug = require('debug')('algoliasearch:src/hostIndexState.js');\nvar localStorageNamespace = 'algoliasearch-client-js';\n\nvar store;\nvar moduleStore = {\n  state: {},\n  set: function(key, data) {\n    this.state[key] = data;\n    return this.state[key];\n  },\n  get: function(key) {\n    return this.state[key] || null;\n  }\n};\n\nvar localStorageStore = {\n  set: function(key, data) {\n    moduleStore.set(key, data); // always replicate localStorageStore to moduleStore in case of failure\n\n    try {\n      var namespace = JSON.parse(global.localStorage[localStorageNamespace]);\n      namespace[key] = data;\n      global.localStorage[localStorageNamespace] = JSON.stringify(namespace);\n      return namespace[key];\n    } catch (e) {\n      return localStorageFailure(key, e);\n    }\n  },\n  get: function(key) {\n    try {\n      return JSON.parse(global.localStorage[localStorageNamespace])[key] || null;\n    } catch (e) {\n      return localStorageFailure(key, e);\n    }\n  }\n};\n\nfunction localStorageFailure(key, e) {\n  debug('localStorage failed with', e);\n  cleanup();\n  store = moduleStore;\n  return store.get(key);\n}\n\nstore = supportsLocalStorage() ? localStorageStore : moduleStore;\n\nmodule.exports = {\n  get: getOrSet,\n  set: getOrSet,\n  supportsLocalStorage: supportsLocalStorage\n};\n\nfunction getOrSet(key, data) {\n  if (arguments.length === 1) {\n    return store.get(key);\n  }\n\n  return store.set(key, data);\n}\n\nfunction supportsLocalStorage() {\n  try {\n    if ('localStorage' in global &&\n      global.localStorage !== null) {\n      if (!global.localStorage[localStorageNamespace]) {\n        // actual creation of the namespace\n        global.localStorage.setItem(localStorageNamespace, JSON.stringify({}));\n      }\n      return true;\n    }\n\n    return false;\n  } catch (_) {\n    return false;\n  }\n}\n\n// In case of any error on localStorage, we clean our own namespace, this should handle\n// quota errors when a lot of keys + data are used\nfunction cleanup() {\n  try {\n    global.localStorage.removeItem(localStorageNamespace);\n  } catch (_) {\n    // nothing to do\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}