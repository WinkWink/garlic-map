{"ast":null,"code":"'use strict';\n\nmodule.exports = jsonpRequest;\nvar errors = require('../errors');\nvar JSONPCounter = 0;\nfunction jsonpRequest(url, opts, cb) {\n  if (opts.method !== 'GET') {\n    cb(new Error('Method ' + opts.method + ' ' + url + ' is not supported by JSONP.'));\n    return;\n  }\n  opts.debug('JSONP: start');\n  var cbCalled = false;\n  var timedOut = false;\n  JSONPCounter += 1;\n  var head = document.getElementsByTagName('head')[0];\n  var script = document.createElement('script');\n  var cbName = 'algoliaJSONP_' + JSONPCounter;\n  var done = false;\n  window[cbName] = function (data) {\n    removeGlobals();\n    if (timedOut) {\n      opts.debug('JSONP: Late answer, ignoring');\n      return;\n    }\n    cbCalled = true;\n    clean();\n    cb(null, {\n      body: data,\n      responseText: JSON.stringify(data) /* ,\n                                         // We do not send the statusCode, there's no statusCode in JSONP, it will be\n                                         // computed using data.status && data.message like with XDR\n                                         statusCode*/\n    });\n  };\n\n  // add callback by hand\n  url += '&callback=' + cbName;\n\n  // add body params manually\n  if (opts.jsonBody && opts.jsonBody.params) {\n    url += '&' + opts.jsonBody.params;\n  }\n  var ontimeout = setTimeout(timeout, opts.timeouts.complete);\n\n  // script onreadystatechange needed only for\n  // <= IE8\n  // https://github.com/angular/angular.js/issues/4523\n  script.onreadystatechange = readystatechange;\n  script.onload = success;\n  script.onerror = error;\n  script.async = true;\n  script.defer = true;\n  script.src = url;\n  head.appendChild(script);\n  function success() {\n    opts.debug('JSONP: success');\n    if (done || timedOut) {\n      return;\n    }\n    done = true;\n\n    // script loaded but did not call the fn => script loading error\n    if (!cbCalled) {\n      opts.debug('JSONP: Fail. Script loaded but did not call the callback');\n      clean();\n      cb(new errors.JSONPScriptFail());\n    }\n  }\n  function readystatechange() {\n    if (this.readyState === 'loaded' || this.readyState === 'complete') {\n      success();\n    }\n  }\n  function clean() {\n    clearTimeout(ontimeout);\n    script.onload = null;\n    script.onreadystatechange = null;\n    script.onerror = null;\n    head.removeChild(script);\n  }\n  function removeGlobals() {\n    try {\n      delete window[cbName];\n      delete window[cbName + '_loaded'];\n    } catch (e) {\n      window[cbName] = window[cbName + '_loaded'] = undefined;\n    }\n  }\n  function timeout() {\n    opts.debug('JSONP: Script timeout');\n    timedOut = true;\n    clean();\n    cb(new errors.RequestTimeout());\n  }\n  function error() {\n    opts.debug('JSONP: Script error');\n    if (done || timedOut) {\n      return;\n    }\n    clean();\n    cb(new errors.JSONPScriptError());\n  }\n}","map":{"version":3,"names":["module","exports","jsonpRequest","errors","require","JSONPCounter","url","opts","cb","method","Error","debug","cbCalled","timedOut","head","document","getElementsByTagName","script","createElement","cbName","done","window","data","removeGlobals","clean","body","responseText","JSON","stringify","jsonBody","params","ontimeout","setTimeout","timeout","timeouts","complete","onreadystatechange","readystatechange","onload","success","onerror","error","async","defer","src","appendChild","JSONPScriptFail","readyState","clearTimeout","removeChild","e","undefined","RequestTimeout","JSONPScriptError"],"sources":["/Users/amandawinkler/Desktop/algolia-instantsearch-react-geo/node_modules/algoliasearch/src/browser/jsonp-request.js"],"sourcesContent":["'use strict';\n\nmodule.exports = jsonpRequest;\n\nvar errors = require('../errors');\n\nvar JSONPCounter = 0;\n\nfunction jsonpRequest(url, opts, cb) {\n  if (opts.method !== 'GET') {\n    cb(new Error('Method ' + opts.method + ' ' + url + ' is not supported by JSONP.'));\n    return;\n  }\n\n  opts.debug('JSONP: start');\n\n  var cbCalled = false;\n  var timedOut = false;\n\n  JSONPCounter += 1;\n  var head = document.getElementsByTagName('head')[0];\n  var script = document.createElement('script');\n  var cbName = 'algoliaJSONP_' + JSONPCounter;\n  var done = false;\n\n  window[cbName] = function(data) {\n    removeGlobals();\n\n    if (timedOut) {\n      opts.debug('JSONP: Late answer, ignoring');\n      return;\n    }\n\n    cbCalled = true;\n\n    clean();\n\n    cb(null, {\n      body: data,\n      responseText: JSON.stringify(data)/* ,\n      // We do not send the statusCode, there's no statusCode in JSONP, it will be\n      // computed using data.status && data.message like with XDR\n      statusCode*/\n    });\n  };\n\n  // add callback by hand\n  url += '&callback=' + cbName;\n\n  // add body params manually\n  if (opts.jsonBody && opts.jsonBody.params) {\n    url += '&' + opts.jsonBody.params;\n  }\n\n  var ontimeout = setTimeout(timeout, opts.timeouts.complete);\n\n  // script onreadystatechange needed only for\n  // <= IE8\n  // https://github.com/angular/angular.js/issues/4523\n  script.onreadystatechange = readystatechange;\n  script.onload = success;\n  script.onerror = error;\n\n  script.async = true;\n  script.defer = true;\n  script.src = url;\n  head.appendChild(script);\n\n  function success() {\n    opts.debug('JSONP: success');\n\n    if (done || timedOut) {\n      return;\n    }\n\n    done = true;\n\n    // script loaded but did not call the fn => script loading error\n    if (!cbCalled) {\n      opts.debug('JSONP: Fail. Script loaded but did not call the callback');\n      clean();\n      cb(new errors.JSONPScriptFail());\n    }\n  }\n\n  function readystatechange() {\n    if (this.readyState === 'loaded' || this.readyState === 'complete') {\n      success();\n    }\n  }\n\n  function clean() {\n    clearTimeout(ontimeout);\n    script.onload = null;\n    script.onreadystatechange = null;\n    script.onerror = null;\n    head.removeChild(script);\n  }\n\n  function removeGlobals() {\n    try {\n      delete window[cbName];\n      delete window[cbName + '_loaded'];\n    } catch (e) {\n      window[cbName] = window[cbName + '_loaded'] = undefined;\n    }\n  }\n\n  function timeout() {\n    opts.debug('JSONP: Script timeout');\n    timedOut = true;\n    clean();\n    cb(new errors.RequestTimeout());\n  }\n\n  function error() {\n    opts.debug('JSONP: Script error');\n\n    if (done || timedOut) {\n      return;\n    }\n\n    clean();\n    cb(new errors.JSONPScriptError());\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,YAAY;AAE7B,IAAIC,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEjC,IAAIC,YAAY,GAAG,CAAC;AAEpB,SAASH,YAAYA,CAACI,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;EACnC,IAAID,IAAI,CAACE,MAAM,KAAK,KAAK,EAAE;IACzBD,EAAE,CAAC,IAAIE,KAAK,CAAC,SAAS,GAAGH,IAAI,CAACE,MAAM,GAAG,GAAG,GAAGH,GAAG,GAAG,6BAA6B,CAAC,CAAC;IAClF;EACF;EAEAC,IAAI,CAACI,KAAK,CAAC,cAAc,CAAC;EAE1B,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,QAAQ,GAAG,KAAK;EAEpBR,YAAY,IAAI,CAAC;EACjB,IAAIS,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACnD,IAAIC,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;EAC7C,IAAIC,MAAM,GAAG,eAAe,GAAGd,YAAY;EAC3C,IAAIe,IAAI,GAAG,KAAK;EAEhBC,MAAM,CAACF,MAAM,CAAC,GAAG,UAASG,IAAI,EAAE;IAC9BC,aAAa,EAAE;IAEf,IAAIV,QAAQ,EAAE;MACZN,IAAI,CAACI,KAAK,CAAC,8BAA8B,CAAC;MAC1C;IACF;IAEAC,QAAQ,GAAG,IAAI;IAEfY,KAAK,EAAE;IAEPhB,EAAE,CAAC,IAAI,EAAE;MACPiB,IAAI,EAAEH,IAAI;MACVI,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;AACxC;AACA;AACA;IACI,CAAC,CAAC;EACJ,CAAC;;EAED;EACAhB,GAAG,IAAI,YAAY,GAAGa,MAAM;;EAE5B;EACA,IAAIZ,IAAI,CAACsB,QAAQ,IAAItB,IAAI,CAACsB,QAAQ,CAACC,MAAM,EAAE;IACzCxB,GAAG,IAAI,GAAG,GAAGC,IAAI,CAACsB,QAAQ,CAACC,MAAM;EACnC;EAEA,IAAIC,SAAS,GAAGC,UAAU,CAACC,OAAO,EAAE1B,IAAI,CAAC2B,QAAQ,CAACC,QAAQ,CAAC;;EAE3D;EACA;EACA;EACAlB,MAAM,CAACmB,kBAAkB,GAAGC,gBAAgB;EAC5CpB,MAAM,CAACqB,MAAM,GAAGC,OAAO;EACvBtB,MAAM,CAACuB,OAAO,GAAGC,KAAK;EAEtBxB,MAAM,CAACyB,KAAK,GAAG,IAAI;EACnBzB,MAAM,CAAC0B,KAAK,GAAG,IAAI;EACnB1B,MAAM,CAAC2B,GAAG,GAAGtC,GAAG;EAChBQ,IAAI,CAAC+B,WAAW,CAAC5B,MAAM,CAAC;EAExB,SAASsB,OAAOA,CAAA,EAAG;IACjBhC,IAAI,CAACI,KAAK,CAAC,gBAAgB,CAAC;IAE5B,IAAIS,IAAI,IAAIP,QAAQ,EAAE;MACpB;IACF;IAEAO,IAAI,GAAG,IAAI;;IAEX;IACA,IAAI,CAACR,QAAQ,EAAE;MACbL,IAAI,CAACI,KAAK,CAAC,0DAA0D,CAAC;MACtEa,KAAK,EAAE;MACPhB,EAAE,CAAC,IAAIL,MAAM,CAAC2C,eAAe,EAAE,CAAC;IAClC;EACF;EAEA,SAAST,gBAAgBA,CAAA,EAAG;IAC1B,IAAI,IAAI,CAACU,UAAU,KAAK,QAAQ,IAAI,IAAI,CAACA,UAAU,KAAK,UAAU,EAAE;MAClER,OAAO,EAAE;IACX;EACF;EAEA,SAASf,KAAKA,CAAA,EAAG;IACfwB,YAAY,CAACjB,SAAS,CAAC;IACvBd,MAAM,CAACqB,MAAM,GAAG,IAAI;IACpBrB,MAAM,CAACmB,kBAAkB,GAAG,IAAI;IAChCnB,MAAM,CAACuB,OAAO,GAAG,IAAI;IACrB1B,IAAI,CAACmC,WAAW,CAAChC,MAAM,CAAC;EAC1B;EAEA,SAASM,aAAaA,CAAA,EAAG;IACvB,IAAI;MACF,OAAOF,MAAM,CAACF,MAAM,CAAC;MACrB,OAAOE,MAAM,CAACF,MAAM,GAAG,SAAS,CAAC;IACnC,CAAC,CAAC,OAAO+B,CAAC,EAAE;MACV7B,MAAM,CAACF,MAAM,CAAC,GAAGE,MAAM,CAACF,MAAM,GAAG,SAAS,CAAC,GAAGgC,SAAS;IACzD;EACF;EAEA,SAASlB,OAAOA,CAAA,EAAG;IACjB1B,IAAI,CAACI,KAAK,CAAC,uBAAuB,CAAC;IACnCE,QAAQ,GAAG,IAAI;IACfW,KAAK,EAAE;IACPhB,EAAE,CAAC,IAAIL,MAAM,CAACiD,cAAc,EAAE,CAAC;EACjC;EAEA,SAASX,KAAKA,CAAA,EAAG;IACflC,IAAI,CAACI,KAAK,CAAC,qBAAqB,CAAC;IAEjC,IAAIS,IAAI,IAAIP,QAAQ,EAAE;MACpB;IACF;IAEAW,KAAK,EAAE;IACPhB,EAAE,CAAC,IAAIL,MAAM,CAACkD,gBAAgB,EAAE,CAAC;EACnC;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}