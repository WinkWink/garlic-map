{"ast":null,"code":"var _jsxFileName = \"/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/src/Geo.js\";\nimport React, { Component } from 'react';\nimport { GeoSearch, Marker } from 'react-instantsearch-dom-maps';\nclass Geo extends Component {\n  constructor() {\n    super(...arguments);\n    this.InfoWindow = new this.props.google.maps.InfoWindow();\n    this.onClickMarker = _ref => {\n      let {\n        hit,\n        marker\n      } = _ref;\n      if (this.InfoWindow.getMap()) this.InfoWindow.close();\n      this.InfoWindow.setContent(`<a href=\"${hit.address}\" target=\"_blank\">${hit.name} - ${hit.address} ${hit.country}<a><br>`);\n      this.InfoWindow.open(marker.getMap(), marker);\n    };\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    return /*#__PURE__*/React.createElement(GeoSearch, {\n      google: google,\n      enableRefine: false,\n      streetViewControl: false,\n      mapTypeControl: false,\n      zoom: 4,\n      minZoom: 3,\n      maxZoom: 7,\n      styles: [{\n        stylers: [{\n          hue: '#3596D2'\n        }]\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, _ref2 => {\n      let {\n        hits\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, hits.map(hit => /*#__PURE__*/React.createElement(Marker, {\n        key: hit.objectID,\n        hit: hit,\n        onClick: _ref3 => {\n          let {\n            marker\n          } = _ref3;\n          this.onClickMarker({\n            hit,\n            marker\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      })));\n    });\n  }\n}\nexport default Geo;","map":{"version":3,"names":["React","Component","GeoSearch","Marker","Geo","constructor","arguments","InfoWindow","props","google","maps","onClickMarker","_ref","hit","marker","getMap","close","setContent","address","name","country","open","render","createElement","enableRefine","streetViewControl","mapTypeControl","zoom","minZoom","maxZoom","styles","stylers","hue","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","hits","map","key","objectID","onClick","_ref3"],"sources":["/Users/amandawinkler/Downloads/algolia-instantsearch-react-geo/src/Geo.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { GeoSearch, Marker } from 'react-instantsearch-dom-maps'\n\nclass Geo extends Component {\n  InfoWindow = new this.props.google.maps.InfoWindow()\n\n  onClickMarker = ({ hit, marker }) => {\n    if (this.InfoWindow.getMap()) this.InfoWindow.close()\n    this.InfoWindow.setContent(\n      `<a href=\"${hit.address}\" target=\"_blank\">${hit.name} - ${hit.address} ${\n        hit.country\n      }<a><br>`\n    )\n    this.InfoWindow.open(marker.getMap(), marker)\n  }\n\n  render() {\n    const { google } = this.props\n\n    return (\n      <GeoSearch\n        google={google}\n        enableRefine={false}\n        streetViewControl={false}\n        mapTypeControl={false}\n        zoom={4}\n        minZoom={3}\n        maxZoom={7}\n        styles={[\n          {\n            stylers: [\n              {\n                hue: '#3596D2'\n              }\n            ]\n          }\n        ]}\n      >\n        {({ hits }) => (\n          <div>\n            {hits.map(hit => (\n              <Marker\n                key={hit.objectID}\n                hit={hit}\n                onClick={({ marker }) => {\n                  this.onClickMarker({\n                    hit,\n                    marker\n                  })\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </GeoSearch>\n    )\n  }\n}\n\nexport default Geo\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,MAAM,QAAQ,8BAA8B;AAEhE,MAAMC,GAAG,SAASH,SAAS,CAAC;EAAAI,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC1BC,UAAU,GAAG,IAAI,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,IAAI,CAACH,UAAU,EAAE;IAAA,KAEpDI,aAAa,GAAGC,IAAA,IAAqB;MAAA,IAApB;QAAEC,GAAG;QAAEC;MAAO,CAAC,GAAAF,IAAA;MAC9B,IAAI,IAAI,CAACL,UAAU,CAACQ,MAAM,EAAE,EAAE,IAAI,CAACR,UAAU,CAACS,KAAK,EAAE;MACrD,IAAI,CAACT,UAAU,CAACU,UAAU,CACvB,YAAWJ,GAAG,CAACK,OAAQ,qBAAoBL,GAAG,CAACM,IAAK,MAAKN,GAAG,CAACK,OAAQ,IACpEL,GAAG,CAACO,OACL,SAAQ,CACV;MACD,IAAI,CAACb,UAAU,CAACc,IAAI,CAACP,MAAM,CAACC,MAAM,EAAE,EAAED,MAAM,CAAC;IAC/C,CAAC;EAAA;EAEDQ,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEb;IAAO,CAAC,GAAG,IAAI,CAACD,KAAK;IAE7B,oBACER,KAAA,CAAAuB,aAAA,CAACrB,SAAS;MACRO,MAAM,EAAEA,MAAO;MACfe,YAAY,EAAE,KAAM;MACpBC,iBAAiB,EAAE,KAAM;MACzBC,cAAc,EAAE,KAAM;MACtBC,IAAI,EAAE,CAAE;MACRC,OAAO,EAAE,CAAE;MACXC,OAAO,EAAE,CAAE;MACXC,MAAM,EAAE,CACN;QACEC,OAAO,EAAE,CACP;UACEC,GAAG,EAAE;QACP,CAAC;MAEL,CAAC,CACD;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEDC,KAAA;MAAA,IAAC;QAAEC;MAAK,CAAC,GAAAD,KAAA;MAAA,oBACRvC,KAAA,CAAAuB,aAAA;QAAAU,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACGE,IAAI,CAACC,GAAG,CAAC5B,GAAG,iBACXb,KAAA,CAAAuB,aAAA,CAACpB,MAAM;QACLuC,GAAG,EAAE7B,GAAG,CAAC8B,QAAS;QAClB9B,GAAG,EAAEA,GAAI;QACT+B,OAAO,EAAEC,KAAA,IAAgB;UAAA,IAAf;YAAE/B;UAAO,CAAC,GAAA+B,KAAA;UAClB,IAAI,CAAClC,aAAa,CAAC;YACjBE,GAAG;YACHC;UACF,CAAC,CAAC;QACJ,CAAE;QAAAmB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAEL,CAAC,CACE;IAAA,CACP,CACS;EAEhB;AACF;AAEA,eAAelC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}