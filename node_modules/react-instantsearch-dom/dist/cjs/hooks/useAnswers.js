"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useAnswers;
var _react = _interopRequireWildcard(require("react"));
var _reactInstantsearchCore = require("react-instantsearch-core");
var _createConcurrentSafePromise = require("../lib/createConcurrentSafePromise");
var _debounce = require("../lib/debounce");
var _excluded = ["searchClient", "queryLanguages", "attributesForPrediction", "nbHits", "renderDebounceTime", "searchDebounceTime"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function hasReactHooks() {
  // >= 16.8.0
  var _React$version$split$ = _react.default.version.split('.').map(Number),
    _React$version$split$2 = _slicedToArray(_React$version$split$, 2),
    major = _React$version$split$2[0],
    minor = _React$version$split$2[1];
  return major >= 17 || major === 16 && minor >= 8;
}
function useAnswers(_ref) {
  var searchClient = _ref.searchClient,
    queryLanguages = _ref.queryLanguages,
    attributesForPrediction = _ref.attributesForPrediction,
    nbHits = _ref.nbHits,
    _ref$renderDebounceTi = _ref.renderDebounceTime,
    renderDebounceTime = _ref$renderDebounceTi === void 0 ? 100 : _ref$renderDebounceTi,
    _ref$searchDebounceTi = _ref.searchDebounceTime,
    searchDebounceTime = _ref$searchDebounceTi === void 0 ? 100 : _ref$searchDebounceTi,
    extraParameters = _objectWithoutProperties(_ref, _excluded);
  if (!hasReactHooks()) {
    throw new Error("`Answers` component and `useAnswers` hook require all React packages to be 16.8.0 or higher.");
  }
  var context = (0, _react.useContext)(_reactInstantsearchCore.instantSearchContext);
  var _useState = (0, _react.useState)(context.store.getState().widgets.query),
    _useState2 = _slicedToArray(_useState, 2),
    query = _useState2[0],
    setQuery = _useState2[1];
  var _useState3 = (0, _react.useState)(context.mainTargetedIndex),
    _useState4 = _slicedToArray(_useState3, 2),
    index = _useState4[0],
    setIndex = _useState4[1];
  var _useState5 = (0, _react.useState)(false),
    _useState6 = _slicedToArray(_useState5, 2),
    isLoading = _useState6[0],
    setIsLoading = _useState6[1];
  var _useState7 = (0, _react.useState)([]),
    _useState8 = _slicedToArray(_useState7, 2),
    hits = _useState8[0],
    setHits = _useState8[1];
  var runConcurrentSafePromise = (0, _react.useMemo)(function () {
    return (0, _createConcurrentSafePromise.createConcurrentSafePromise)();
  }, []);
  var searchIndex = (0, _react.useMemo)(function () {
    return searchClient.initIndex(index);
  }, [searchClient, index]);
  if (!searchIndex.findAnswers) {
    throw new Error('`Answers` component and `useAnswers` hook require `algoliasearch` to be 4.8.0 or higher.');
  }
  var debouncedSearch = (0, _react.useMemo)(function () {
    return (0, _debounce.debounce)(searchIndex.findAnswers, searchDebounceTime);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [searchIndex]);
  (0, _react.useEffect)(function () {
    setIndex(context.mainTargetedIndex);
    return context.store.subscribe(function () {
      var _context$store$getSta = context.store.getState(),
        widgets = _context$store$getSta.widgets;
      setQuery(widgets.query);
    });
  }, [context]);
  var setDebouncedResult = (0, _react.useMemo)(function () {
    return (0, _debounce.debounce)(function (result) {
      setIsLoading(false);
      setHits(result.hits);
    }, renderDebounceTime);
  },
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [setIsLoading, setHits]);
  var fetchAnswers = function fetchAnswers() {
    if (!query) {
      setIsLoading(false);
      setHits([]);
      return;
    }
    setIsLoading(true);
    runConcurrentSafePromise(debouncedSearch(query, queryLanguages, _objectSpread(_objectSpread({}, extraParameters), {}, {
      nbHits: nbHits,
      attributesForPrediction: attributesForPrediction
    }))).then(function (result) {
      if (!result) {
        // It's undefined when it's debounced.
        return;
      }
      setDebouncedResult(result);
    });
  };
  (0, _react.useEffect)(function () {
    fetchAnswers();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [query]);
  return {
    hits: hits,
    isLoading: isLoading
  };
}