function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import { createClassNames } from "../core/utils.js";
import Highlighter from "./Highlighter.js";
var cx = createClassNames('Highlight');
var Highlight = function Highlight(props) {
  return /*#__PURE__*/React.createElement(Highlighter, _extends({}, props, {
    highlightProperty: "_highlightResult",
    cx: cx
  }));
};
export default Highlight;