function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { translatable } from 'react-instantsearch-core';
import { createClassNames, find, range } from "../core/utils.js";
var cx = createClassNames('RatingMenu');
var _ref2 = /*#__PURE__*/React.createElement("path", {
  d: "M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"
});
var _ref3 = /*#__PURE__*/React.createElement("path", {
  d: "M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"
});
var RatingMenu = /*#__PURE__*/function (_Component) {
  _inherits(RatingMenu, _Component);
  var _super = _createSuper(RatingMenu);
  function RatingMenu() {
    _classCallCheck(this, RatingMenu);
    return _super.apply(this, arguments);
  }
  _createClass(RatingMenu, [{
    key: "onClick",
    value: function onClick(min, max, e) {
      e.preventDefault();
      e.stopPropagation();
      if (min === this.props.currentRefinement.min && max === this.props.currentRefinement.max) {
        this.props.refine({
          min: this.props.min,
          max: this.props.max
        });
      } else {
        this.props.refine({
          min: min,
          max: max
        });
      }
    }
  }, {
    key: "buildItem",
    value: function buildItem(_ref) {
      var max = _ref.max,
        lowerBound = _ref.lowerBound,
        count = _ref.count,
        translate = _ref.translate,
        createURL = _ref.createURL,
        isLastSelectableItem = _ref.isLastSelectableItem;
      var disabled = !count;
      var isCurrentMinLower = this.props.currentRefinement.min < lowerBound;
      var selected = isLastSelectableItem && isCurrentMinLower || !disabled && lowerBound === this.props.currentRefinement.min && max === this.props.currentRefinement.max;
      var icons = [];
      var rating = 0;
      for (var icon = 0; icon < max; icon++) {
        if (icon < lowerBound) {
          rating++;
        }
        icons.push([/*#__PURE__*/React.createElement("svg", {
          key: icon,
          className: cx('starIcon', icon >= lowerBound ? 'starIcon--empty' : 'starIcon--full'),
          "aria-hidden": "true",
          width: "24",
          height: "24"
        }, /*#__PURE__*/React.createElement("use", {
          xlinkHref: "#".concat(cx(icon >= lowerBound ? 'starEmptySymbol' : 'starSymbol'))
        })), ' ']);
      }

      // The last item of the list (the default item), should not
      // be clickable if it is selected.
      var isLastAndSelect = isLastSelectableItem && selected;
      var onClickHandler = disabled || isLastAndSelect ? {} : {
        href: createURL({
          min: lowerBound,
          max: max
        }),
        onClick: this.onClick.bind(this, lowerBound, max)
      };
      return /*#__PURE__*/React.createElement("li", {
        key: lowerBound,
        className: cx('item', selected && 'item--selected', disabled && 'item--disabled')
      }, /*#__PURE__*/React.createElement("a", _extends({
        className: cx('link'),
        "aria-label": "".concat(rating).concat(translate('ratingLabel'))
      }, onClickHandler), icons, /*#__PURE__*/React.createElement("span", {
        className: cx('label'),
        "aria-hidden": "true"
      }, translate('ratingLabel')), ' ', /*#__PURE__*/React.createElement("span", {
        className: cx('count')
      }, count)));
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;
      var _this$props = this.props,
        min = _this$props.min,
        max = _this$props.max,
        translate = _this$props.translate,
        count = _this$props.count,
        createURL = _this$props.createURL,
        canRefine = _this$props.canRefine,
        className = _this$props.className;

      // min & max are always set when there is a results, otherwise it means
      // that we don't want to render anything since we don't have any values.
      var limitMin = min !== undefined && min >= 0 ? min : 1;
      var limitMax = max !== undefined && max >= 0 ? max : 0;
      var inclusiveLength = limitMax - limitMin + 1;
      var values = count.map(function (item) {
        return _objectSpread(_objectSpread({}, item), {}, {
          value: parseFloat(item.value)
        });
      }).filter(function (item) {
        return item.value >= limitMin && item.value <= limitMax;
      });
      var items = range({
        start: 0,
        end: Math.max(inclusiveLength, 0)
      }).map(function (index) {
        var element = find(values, function (item) {
          return item.value === limitMax - index;
        });
        var placeholder = {
          value: limitMax - index,
          count: 0,
          total: 0
        };
        return element || placeholder;
      }).reduce(function (acc, item, index) {
        return acc.concat(_objectSpread(_objectSpread({}, item), {}, {
          total: index === 0 ? item.count : acc[index - 1].total + item.count
        }));
      }, []).map(function (item, index, arr) {
        return _this.buildItem({
          lowerBound: item.value,
          count: item.total,
          isLastSelectableItem: arr.length - 1 === index,
          max: limitMax,
          translate: translate,
          createURL: createURL
        });
      });
      return /*#__PURE__*/React.createElement("div", {
        className: classNames(cx('', !canRefine && '-noRefinement'), className)
      }, /*#__PURE__*/React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        style: {
          display: 'none'
        }
      }, /*#__PURE__*/React.createElement("symbol", {
        id: cx('starSymbol'),
        viewBox: "0 0 24 24"
      }, _ref2), /*#__PURE__*/React.createElement("symbol", {
        id: cx('starEmptySymbol'),
        viewBox: "0 0 24 24"
      }, _ref3)), /*#__PURE__*/React.createElement("ul", {
        className: cx('list', !canRefine && 'list--noRefinement')
      }, items));
    }
  }]);
  return RatingMenu;
}(Component);
_defineProperty(RatingMenu, "propTypes", {
  translate: PropTypes.func.isRequired,
  refine: PropTypes.func.isRequired,
  createURL: PropTypes.func.isRequired,
  min: PropTypes.number,
  max: PropTypes.number,
  currentRefinement: PropTypes.shape({
    min: PropTypes.number,
    max: PropTypes.number
  }),
  count: PropTypes.arrayOf(PropTypes.shape({
    value: PropTypes.string,
    count: PropTypes.number
  })),
  canRefine: PropTypes.bool.isRequired,
  className: PropTypes.string
});
_defineProperty(RatingMenu, "defaultProps", {
  className: ''
});
export default translatable({
  ratingLabel: ' & Up'
})(RatingMenu);